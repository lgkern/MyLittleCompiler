Terminals unused in grammar

   "ERRO"


State 2 conflicts: 5 shift/reduce
State 111 conflicts: 12 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: stmts

    2 stmts: %empty
    3      | stmts stmt

    4 stmt: Global SC
    5     | Function

    6 SC: ';'

    7 Global: Type "ID" Vector

    8 Type: "INT"
    9     | "FLOAT"
   10     | "BOOL"
   11     | "CHAR"
   12     | "STRING"

   13 Vector: %empty
   14       | '[' "litInt" ']'

   15 Function: Header Body Program

   16 Header: Type "ID" List

   17 List: '(' ParaList ')'

   18 ParaList: Parameter ',' ParaList
   19         | Parameter

   20 Parameter: Local

   21 Body: '{' Block '}'

   22 Block: %empty
   23      | Block Command

   24 Command: Local SC
   25        | Attribution SC
   26        | FlowControl SC
   27        | Input SC
   28        | Output SC
   29        | Return SC
   30        | Call SC
   31        | Body
   32        | SC

   33 Local: Type "ID"

   34 ID: "ID" Vector

   35 Attribution: ID '=' Expression

   36 Expression: Literal
   37           | Expression OP Expression
   38           | '(' Expression ')'
   39           | Call

   40 Literal: "ID" Vector
   41        | Boolean
   42        | "litInteger"
   43        | "litFloat"
   44        | "litChar"
   45        | "litString"

   46 Boolean: "false"
   47        | "true"

   48 OP: '+'
   49   | '-'
   50   | '*'
   51   | '/'
   52   | '>'
   53   | '<'
   54   | "=="
   55   | "!="
   56   | ">="
   57   | "<="
   58   | "&&"
   59   | "||"

   60 Return: "RETURN" Expression

   61 FlowControl: If
   62            | While

   63 If: "IF" '(' Expression ')' "THEN" Body Else

   64 Else: %empty
   65     | "ELSE" Body

   66 While: "WHILE" '(' Expression ')' "DO" Body
   67      | "DO" Body "WHILE" '(' Expression ')' SC

   68 Input: "INPUT" ID

   69 Output: "OUTPUT" ExpList

   70 Call: "ID" '(' ExpList ')'

   71 ExpList: Expression ',' ExpList
   72        | Expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 38 63 66 67 70
')' (41) 17 38 63 66 67 70
'*' (42) 50
'+' (43) 48
',' (44) 18 71
'-' (45) 49
'/' (47) 51
';' (59) 6
'<' (60) 53
'=' (61) 35
'>' (62) 52
'[' (91) 14
']' (93) 14
'{' (123) 21
'}' (125) 21
error (256)
"INT" (258) 8
"FLOAT" (259) 9
"BOOL" (260) 10
"CHAR" (261) 11
"STRING" (262) 12
"IF" (263) 63
"THEN" (264) 63
"ELSE" (265) 65
"WHILE" (266) 66 67
"DO" (267) 66 67
"INPUT" (268) 68
"OUTPUT" (269) 69
"RETURN" (270) 60
"<=" (271) 57
">=" (272) 56
"==" (273) 54
"!=" (274) 55
"&&" (275) 58
"||" (276) 59
"litInt" (277) 14
"litFloat" (278) 43
"false" (279) 46
"true" (280) 47
"litChar" (281) 44
"litString" (282) 45
"ID" (283) 7 16 33 34 40 70
"ERRO" (284)
"litInteger" (285) 42


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1, on right: 0 15
stmts (48)
    on left: 2 3, on right: 1 3
stmt (49)
    on left: 4 5, on right: 3
SC (50)
    on left: 6, on right: 4 24 25 26 27 28 29 30 32 67
Global (51)
    on left: 7, on right: 4
Type (52)
    on left: 8 9 10 11 12, on right: 7 16 33
Vector (53)
    on left: 13 14, on right: 7 34 40
Function (54)
    on left: 15, on right: 5
Header (55)
    on left: 16, on right: 15
List (56)
    on left: 17, on right: 16
ParaList (57)
    on left: 18 19, on right: 17 18
Parameter (58)
    on left: 20, on right: 18 19
Body (59)
    on left: 21, on right: 15 31 63 65 66 67
Block (60)
    on left: 22 23, on right: 21 23
Command (61)
    on left: 24 25 26 27 28 29 30 31 32, on right: 23
Local (62)
    on left: 33, on right: 20 24
ID (63)
    on left: 34, on right: 35 68
Attribution (64)
    on left: 35, on right: 25
Expression (65)
    on left: 36 37 38 39, on right: 35 37 38 60 63 66 67 71 72
Literal (66)
    on left: 40 41 42 43 44 45, on right: 36
Boolean (67)
    on left: 46 47, on right: 41
OP (68)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59, on right: 37
Return (69)
    on left: 60, on right: 29
FlowControl (70)
    on left: 61 62, on right: 26
If (71)
    on left: 63, on right: 61
Else (72)
    on left: 64 65, on right: 63
While (73)
    on left: 66 67, on right: 62
Input (74)
    on left: 68, on right: 27
Output (75)
    on left: 69, on right: 28
Call (76)
    on left: 70, on right: 30 39
ExpList (77)
    on left: 71 72, on right: 69 70 71


State 0

    0 $accept: . Program $end

    $default  reduce using rule 2 (stmts)

    Program  go to state 1
    stmts    go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    1 Program: stmts .
    3 stmts: stmts . stmt

    "INT"     shift, and go to state 4
    "FLOAT"   shift, and go to state 5
    "BOOL"    shift, and go to state 6
    "CHAR"    shift, and go to state 7
    "STRING"  shift, and go to state 8

    "INT"     [reduce using rule 1 (Program)]
    "FLOAT"   [reduce using rule 1 (Program)]
    "BOOL"    [reduce using rule 1 (Program)]
    "CHAR"    [reduce using rule 1 (Program)]
    "STRING"  [reduce using rule 1 (Program)]
    $default  reduce using rule 1 (Program)

    stmt      go to state 9
    Global    go to state 10
    Type      go to state 11
    Function  go to state 12
    Header    go to state 13


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    8 Type: "INT" .

    $default  reduce using rule 8 (Type)


State 5

    9 Type: "FLOAT" .

    $default  reduce using rule 9 (Type)


State 6

   10 Type: "BOOL" .

    $default  reduce using rule 10 (Type)


State 7

   11 Type: "CHAR" .

    $default  reduce using rule 11 (Type)


State 8

   12 Type: "STRING" .

    $default  reduce using rule 12 (Type)


State 9

    3 stmts: stmts stmt .

    $default  reduce using rule 3 (stmts)


State 10

    4 stmt: Global . SC

    ';'  shift, and go to state 14

    SC  go to state 15


State 11

    7 Global: Type . "ID" Vector
   16 Header: Type . "ID" List

    "ID"  shift, and go to state 16


State 12

    5 stmt: Function .

    $default  reduce using rule 5 (stmt)


State 13

   15 Function: Header . Body Program

    '{'  shift, and go to state 17

    Body  go to state 18


State 14

    6 SC: ';' .

    $default  reduce using rule 6 (SC)


State 15

    4 stmt: Global SC .

    $default  reduce using rule 4 (stmt)


State 16

    7 Global: Type "ID" . Vector
   16 Header: Type "ID" . List

    '['  shift, and go to state 19
    '('  shift, and go to state 20

    $default  reduce using rule 13 (Vector)

    Vector  go to state 21
    List    go to state 22


State 17

   21 Body: '{' . Block '}'

    $default  reduce using rule 22 (Block)

    Block  go to state 23


State 18

   15 Function: Header Body . Program

    $default  reduce using rule 2 (stmts)

    Program  go to state 24
    stmts    go to state 2


State 19

   14 Vector: '[' . "litInt" ']'

    "litInt"  shift, and go to state 25


State 20

   17 List: '(' . ParaList ')'

    "INT"     shift, and go to state 4
    "FLOAT"   shift, and go to state 5
    "BOOL"    shift, and go to state 6
    "CHAR"    shift, and go to state 7
    "STRING"  shift, and go to state 8

    Type       go to state 26
    ParaList   go to state 27
    Parameter  go to state 28
    Local      go to state 29


State 21

    7 Global: Type "ID" Vector .

    $default  reduce using rule 7 (Global)


State 22

   16 Header: Type "ID" List .

    $default  reduce using rule 16 (Header)


State 23

   21 Body: '{' Block . '}'
   23 Block: Block . Command

    "INT"     shift, and go to state 4
    "FLOAT"   shift, and go to state 5
    "BOOL"    shift, and go to state 6
    "CHAR"    shift, and go to state 7
    "STRING"  shift, and go to state 8
    "IF"      shift, and go to state 30
    "WHILE"   shift, and go to state 31
    "DO"      shift, and go to state 32
    "INPUT"   shift, and go to state 33
    "OUTPUT"  shift, and go to state 34
    "RETURN"  shift, and go to state 35
    "ID"      shift, and go to state 36
    ';'       shift, and go to state 14
    '{'       shift, and go to state 17
    '}'       shift, and go to state 37

    SC           go to state 38
    Type         go to state 26
    Body         go to state 39
    Command      go to state 40
    Local        go to state 41
    ID           go to state 42
    Attribution  go to state 43
    Return       go to state 44
    FlowControl  go to state 45
    If           go to state 46
    While        go to state 47
    Input        go to state 48
    Output       go to state 49
    Call         go to state 50


State 24

   15 Function: Header Body Program .

    $default  reduce using rule 15 (Function)


State 25

   14 Vector: '[' "litInt" . ']'

    ']'  shift, and go to state 51


State 26

   33 Local: Type . "ID"

    "ID"  shift, and go to state 52


State 27

   17 List: '(' ParaList . ')'

    ')'  shift, and go to state 53


State 28

   18 ParaList: Parameter . ',' ParaList
   19         | Parameter .

    ','  shift, and go to state 54

    $default  reduce using rule 19 (ParaList)


State 29

   20 Parameter: Local .

    $default  reduce using rule 20 (Parameter)


State 30

   63 If: "IF" . '(' Expression ')' "THEN" Body Else

    '('  shift, and go to state 55


State 31

   66 While: "WHILE" . '(' Expression ')' "DO" Body

    '('  shift, and go to state 56


State 32

   67 While: "DO" . Body "WHILE" '(' Expression ')' SC

    '{'  shift, and go to state 17

    Body  go to state 57


State 33

   68 Input: "INPUT" . ID

    "ID"  shift, and go to state 58

    ID  go to state 59


State 34

   69 Output: "OUTPUT" . ExpList

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 68
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71
    ExpList     go to state 72


State 35

   60 Return: "RETURN" . Expression

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 73
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71


State 36

   34 ID: "ID" . Vector
   70 Call: "ID" . '(' ExpList ')'

    '['  shift, and go to state 19
    '('  shift, and go to state 74

    $default  reduce using rule 13 (Vector)

    Vector  go to state 75


State 37

   21 Body: '{' Block '}' .

    $default  reduce using rule 21 (Body)


State 38

   32 Command: SC .

    $default  reduce using rule 32 (Command)


State 39

   31 Command: Body .

    $default  reduce using rule 31 (Command)


State 40

   23 Block: Block Command .

    $default  reduce using rule 23 (Block)


State 41

   24 Command: Local . SC

    ';'  shift, and go to state 14

    SC  go to state 76


State 42

   35 Attribution: ID . '=' Expression

    '='  shift, and go to state 77


State 43

   25 Command: Attribution . SC

    ';'  shift, and go to state 14

    SC  go to state 78


State 44

   29 Command: Return . SC

    ';'  shift, and go to state 14

    SC  go to state 79


State 45

   26 Command: FlowControl . SC

    ';'  shift, and go to state 14

    SC  go to state 80


State 46

   61 FlowControl: If .

    $default  reduce using rule 61 (FlowControl)


State 47

   62 FlowControl: While .

    $default  reduce using rule 62 (FlowControl)


State 48

   27 Command: Input . SC

    ';'  shift, and go to state 14

    SC  go to state 81


State 49

   28 Command: Output . SC

    ';'  shift, and go to state 14

    SC  go to state 82


State 50

   30 Command: Call . SC

    ';'  shift, and go to state 14

    SC  go to state 83


State 51

   14 Vector: '[' "litInt" ']' .

    $default  reduce using rule 14 (Vector)


State 52

   33 Local: Type "ID" .

    $default  reduce using rule 33 (Local)


State 53

   17 List: '(' ParaList ')' .

    $default  reduce using rule 17 (List)


State 54

   18 ParaList: Parameter ',' . ParaList

    "INT"     shift, and go to state 4
    "FLOAT"   shift, and go to state 5
    "BOOL"    shift, and go to state 6
    "CHAR"    shift, and go to state 7
    "STRING"  shift, and go to state 8

    Type       go to state 26
    ParaList   go to state 84
    Parameter  go to state 28
    Local      go to state 29


State 55

   63 If: "IF" '(' . Expression ')' "THEN" Body Else

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 85
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71


State 56

   66 While: "WHILE" '(' . Expression ')' "DO" Body

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 86
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71


State 57

   67 While: "DO" Body . "WHILE" '(' Expression ')' SC

    "WHILE"  shift, and go to state 87


State 58

   34 ID: "ID" . Vector

    '['  shift, and go to state 19

    $default  reduce using rule 13 (Vector)

    Vector  go to state 75


State 59

   68 Input: "INPUT" ID .

    $default  reduce using rule 68 (Input)


State 60

   43 Literal: "litFloat" .

    $default  reduce using rule 43 (Literal)


State 61

   46 Boolean: "false" .

    $default  reduce using rule 46 (Boolean)


State 62

   47 Boolean: "true" .

    $default  reduce using rule 47 (Boolean)


State 63

   44 Literal: "litChar" .

    $default  reduce using rule 44 (Literal)


State 64

   45 Literal: "litString" .

    $default  reduce using rule 45 (Literal)


State 65

   40 Literal: "ID" . Vector
   70 Call: "ID" . '(' ExpList ')'

    '['  shift, and go to state 19
    '('  shift, and go to state 74

    $default  reduce using rule 13 (Vector)

    Vector  go to state 88


State 66

   38 Expression: '(' . Expression ')'

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 89
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71


State 67

   42 Literal: "litInteger" .

    $default  reduce using rule 42 (Literal)


State 68

   37 Expression: Expression . OP Expression
   71 ExpList: Expression . ',' ExpList
   72        | Expression .

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "!="  shift, and go to state 93
    "&&"  shift, and go to state 94
    "||"  shift, and go to state 95
    ','   shift, and go to state 96
    '+'   shift, and go to state 97
    '-'   shift, and go to state 98
    '*'   shift, and go to state 99
    '/'   shift, and go to state 100
    '>'   shift, and go to state 101
    '<'   shift, and go to state 102

    $default  reduce using rule 72 (ExpList)

    OP  go to state 103


State 69

   36 Expression: Literal .

    $default  reduce using rule 36 (Expression)


State 70

   41 Literal: Boolean .

    $default  reduce using rule 41 (Literal)


State 71

   39 Expression: Call .

    $default  reduce using rule 39 (Expression)


State 72

   69 Output: "OUTPUT" ExpList .

    $default  reduce using rule 69 (Output)


State 73

   37 Expression: Expression . OP Expression
   60 Return: "RETURN" Expression .

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "!="  shift, and go to state 93
    "&&"  shift, and go to state 94
    "||"  shift, and go to state 95
    '+'   shift, and go to state 97
    '-'   shift, and go to state 98
    '*'   shift, and go to state 99
    '/'   shift, and go to state 100
    '>'   shift, and go to state 101
    '<'   shift, and go to state 102

    $default  reduce using rule 60 (Return)

    OP  go to state 103


State 74

   70 Call: "ID" '(' . ExpList ')'

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 68
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71
    ExpList     go to state 104


State 75

   34 ID: "ID" Vector .

    $default  reduce using rule 34 (ID)


State 76

   24 Command: Local SC .

    $default  reduce using rule 24 (Command)


State 77

   35 Attribution: ID '=' . Expression

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 105
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71


State 78

   25 Command: Attribution SC .

    $default  reduce using rule 25 (Command)


State 79

   29 Command: Return SC .

    $default  reduce using rule 29 (Command)


State 80

   26 Command: FlowControl SC .

    $default  reduce using rule 26 (Command)


State 81

   27 Command: Input SC .

    $default  reduce using rule 27 (Command)


State 82

   28 Command: Output SC .

    $default  reduce using rule 28 (Command)


State 83

   30 Command: Call SC .

    $default  reduce using rule 30 (Command)


State 84

   18 ParaList: Parameter ',' ParaList .

    $default  reduce using rule 18 (ParaList)


State 85

   37 Expression: Expression . OP Expression
   63 If: "IF" '(' Expression . ')' "THEN" Body Else

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "!="  shift, and go to state 93
    "&&"  shift, and go to state 94
    "||"  shift, and go to state 95
    ')'   shift, and go to state 106
    '+'   shift, and go to state 97
    '-'   shift, and go to state 98
    '*'   shift, and go to state 99
    '/'   shift, and go to state 100
    '>'   shift, and go to state 101
    '<'   shift, and go to state 102

    OP  go to state 103


State 86

   37 Expression: Expression . OP Expression
   66 While: "WHILE" '(' Expression . ')' "DO" Body

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "!="  shift, and go to state 93
    "&&"  shift, and go to state 94
    "||"  shift, and go to state 95
    ')'   shift, and go to state 107
    '+'   shift, and go to state 97
    '-'   shift, and go to state 98
    '*'   shift, and go to state 99
    '/'   shift, and go to state 100
    '>'   shift, and go to state 101
    '<'   shift, and go to state 102

    OP  go to state 103


State 87

   67 While: "DO" Body "WHILE" . '(' Expression ')' SC

    '('  shift, and go to state 108


State 88

   40 Literal: "ID" Vector .

    $default  reduce using rule 40 (Literal)


State 89

   37 Expression: Expression . OP Expression
   38           | '(' Expression . ')'

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "!="  shift, and go to state 93
    "&&"  shift, and go to state 94
    "||"  shift, and go to state 95
    ')'   shift, and go to state 109
    '+'   shift, and go to state 97
    '-'   shift, and go to state 98
    '*'   shift, and go to state 99
    '/'   shift, and go to state 100
    '>'   shift, and go to state 101
    '<'   shift, and go to state 102

    OP  go to state 103


State 90

   57 OP: "<=" .

    $default  reduce using rule 57 (OP)


State 91

   56 OP: ">=" .

    $default  reduce using rule 56 (OP)


State 92

   54 OP: "==" .

    $default  reduce using rule 54 (OP)


State 93

   55 OP: "!=" .

    $default  reduce using rule 55 (OP)


State 94

   58 OP: "&&" .

    $default  reduce using rule 58 (OP)


State 95

   59 OP: "||" .

    $default  reduce using rule 59 (OP)


State 96

   71 ExpList: Expression ',' . ExpList

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 68
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71
    ExpList     go to state 110


State 97

   48 OP: '+' .

    $default  reduce using rule 48 (OP)


State 98

   49 OP: '-' .

    $default  reduce using rule 49 (OP)


State 99

   50 OP: '*' .

    $default  reduce using rule 50 (OP)


State 100

   51 OP: '/' .

    $default  reduce using rule 51 (OP)


State 101

   52 OP: '>' .

    $default  reduce using rule 52 (OP)


State 102

   53 OP: '<' .

    $default  reduce using rule 53 (OP)


State 103

   37 Expression: Expression OP . Expression

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 111
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71


State 104

   70 Call: "ID" '(' ExpList . ')'

    ')'  shift, and go to state 112


State 105

   35 Attribution: ID '=' Expression .
   37 Expression: Expression . OP Expression

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "!="  shift, and go to state 93
    "&&"  shift, and go to state 94
    "||"  shift, and go to state 95
    '+'   shift, and go to state 97
    '-'   shift, and go to state 98
    '*'   shift, and go to state 99
    '/'   shift, and go to state 100
    '>'   shift, and go to state 101
    '<'   shift, and go to state 102

    $default  reduce using rule 35 (Attribution)

    OP  go to state 103


State 106

   63 If: "IF" '(' Expression ')' . "THEN" Body Else

    "THEN"  shift, and go to state 113


State 107

   66 While: "WHILE" '(' Expression ')' . "DO" Body

    "DO"  shift, and go to state 114


State 108

   67 While: "DO" Body "WHILE" '(' . Expression ')' SC

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "litChar"     shift, and go to state 63
    "litString"   shift, and go to state 64
    "ID"          shift, and go to state 65
    '('           shift, and go to state 66
    "litInteger"  shift, and go to state 67

    Expression  go to state 115
    Literal     go to state 69
    Boolean     go to state 70
    Call        go to state 71


State 109

   38 Expression: '(' Expression ')' .

    $default  reduce using rule 38 (Expression)


State 110

   71 ExpList: Expression ',' ExpList .

    $default  reduce using rule 71 (ExpList)


State 111

   37 Expression: Expression . OP Expression
   37           | Expression OP Expression .

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "!="  shift, and go to state 93
    "&&"  shift, and go to state 94
    "||"  shift, and go to state 95
    '+'   shift, and go to state 97
    '-'   shift, and go to state 98
    '*'   shift, and go to state 99
    '/'   shift, and go to state 100
    '>'   shift, and go to state 101
    '<'   shift, and go to state 102

    "<="      [reduce using rule 37 (Expression)]
    ">="      [reduce using rule 37 (Expression)]
    "=="      [reduce using rule 37 (Expression)]
    "!="      [reduce using rule 37 (Expression)]
    "&&"      [reduce using rule 37 (Expression)]
    "||"      [reduce using rule 37 (Expression)]
    '+'       [reduce using rule 37 (Expression)]
    '-'       [reduce using rule 37 (Expression)]
    '*'       [reduce using rule 37 (Expression)]
    '/'       [reduce using rule 37 (Expression)]
    '>'       [reduce using rule 37 (Expression)]
    '<'       [reduce using rule 37 (Expression)]
    $default  reduce using rule 37 (Expression)

    OP  go to state 103


State 112

   70 Call: "ID" '(' ExpList ')' .

    $default  reduce using rule 70 (Call)


State 113

   63 If: "IF" '(' Expression ')' "THEN" . Body Else

    '{'  shift, and go to state 17

    Body  go to state 116


State 114

   66 While: "WHILE" '(' Expression ')' "DO" . Body

    '{'  shift, and go to state 17

    Body  go to state 117


State 115

   37 Expression: Expression . OP Expression
   67 While: "DO" Body "WHILE" '(' Expression . ')' SC

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "!="  shift, and go to state 93
    "&&"  shift, and go to state 94
    "||"  shift, and go to state 95
    ')'   shift, and go to state 118
    '+'   shift, and go to state 97
    '-'   shift, and go to state 98
    '*'   shift, and go to state 99
    '/'   shift, and go to state 100
    '>'   shift, and go to state 101
    '<'   shift, and go to state 102

    OP  go to state 103


State 116

   63 If: "IF" '(' Expression ')' "THEN" Body . Else

    "ELSE"  shift, and go to state 119

    $default  reduce using rule 64 (Else)

    Else  go to state 120


State 117

   66 While: "WHILE" '(' Expression ')' "DO" Body .

    $default  reduce using rule 66 (While)


State 118

   67 While: "DO" Body "WHILE" '(' Expression ')' . SC

    ';'  shift, and go to state 14

    SC  go to state 121


State 119

   65 Else: "ELSE" . Body

    '{'  shift, and go to state 17

    Body  go to state 122


State 120

   63 If: "IF" '(' Expression ')' "THEN" Body Else .

    $default  reduce using rule 63 (If)


State 121

   67 While: "DO" Body "WHILE" '(' Expression ')' SC .

    $default  reduce using rule 67 (While)


State 122

   65 Else: "ELSE" Body .

    $default  reduce using rule 65 (Else)
