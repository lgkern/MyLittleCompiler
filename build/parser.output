Terminals unused in grammar

   "!="
   "litChar"
   "litString"
   "ERRO"


State 32 conflicts: 5 shift/reduce
State 103 conflicts: 11 shift/reduce
State 111 conflicts: 11 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | DeclStart Function
    3        | DeclStart Global

    4 DeclStart: Program Type "ID"

    5 SC: ';'

    6 Global: Vector SC

    7 Type: "INT"
    8     | "FLOAT"
    9     | "BOOL"
   10     | "CHAR"
   11     | "STRING"

   12 Vector: %empty
   13       | '[' "litInt" ']'

   14 Function: Header Body Program

   15 Header: List

   16 List: '(' ParaList ')'

   17 ParaList: Parameter ',' ParaList
   18         | Parameter

   19 Parameter: Local

   20 Body: '{' Block '}'

   21 Block: %empty
   22      | Block Command

   23 Command: Local SC
   24        | Attribution SC
   25        | FlowControl SC
   26        | Input SC
   27        | Output SC
   28        | Return SC
   29        | Call SC
   30        | Body
   31        | SC

   32 Local: Type "ID"

   33 ID: "ID" Vector

   34 Attribution: ID '=' Expression

   35 Expression: Literal
   36           | Expression OP Expression
   37           | UnaryOP Expression
   38           | '(' Expression ')'
   39           | Call

   40 Literal: "ID" Vector
   41        | Boolean
   42        | "litInteger"
   43        | "litFloat"

   44 Boolean: "false"
   45        | "true"

   46 OP: '+'
   47   | '-'
   48   | '*'
   49   | '/'
   50   | '>'
   51   | '<'
   52   | "=="
   53   | ">="
   54   | "<="
   55   | "&&"
   56   | "||"

   57 UnaryOP: '-'
   58        | '!'

   59 Return: "RETURN" Expression

   60 FlowControl: If
   61            | While

   62 If: "IF" '(' Expression ')' "THEN" Body Else

   63 Else: %empty
   64     | "ELSE" Body

   65 While: "WHILE" '(' Expression ')' "DO" Body
   66      | "DO" Body "WHILE" '(' Expression ')' SC

   67 Input: "INPUT" ID

   68 Output: "OUTPUT" ExpList

   69 Call: "ID" '(' ExpList ')'

   70 ExpList: Expression ',' ExpList
   71        | Expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 58
'(' (40) 16 38 62 65 66 69
')' (41) 16 38 62 65 66 69
'*' (42) 48
'+' (43) 46
',' (44) 17 70
'-' (45) 47 57
'/' (47) 49
';' (59) 5
'<' (60) 51
'=' (61) 34
'>' (62) 50
'[' (91) 13
']' (93) 13
'{' (123) 20
'}' (125) 20
error (256)
"INT" (258) 7
"FLOAT" (259) 8
"BOOL" (260) 9
"CHAR" (261) 10
"STRING" (262) 11
"IF" (263) 62
"THEN" (264) 62
"ELSE" (265) 64
"WHILE" (266) 65 66
"DO" (267) 65 66
"INPUT" (268) 67
"OUTPUT" (269) 68
"RETURN" (270) 59
"<=" (271) 54
">=" (272) 53
"==" (273) 52
"!=" (274)
"&&" (275) 55
"||" (276) 56
"litInt" (277) 13
"litFloat" (278) 43
"false" (279) 44
"true" (280) 45
"litChar" (281)
"litString" (282)
"ID" (283) 4 32 33 40 69
"ERRO" (284)
"litInteger" (285) 42


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
Program (48)
    on left: 1 2 3, on right: 0 4 14
DeclStart (49)
    on left: 4, on right: 2 3
SC (50)
    on left: 5, on right: 6 23 24 25 26 27 28 29 31 66
Global (51)
    on left: 6, on right: 3
Type (52)
    on left: 7 8 9 10 11, on right: 4 32
Vector (53)
    on left: 12 13, on right: 6 33 40
Function (54)
    on left: 14, on right: 2
Header (55)
    on left: 15, on right: 14
List (56)
    on left: 16, on right: 15
ParaList (57)
    on left: 17 18, on right: 16 17
Parameter (58)
    on left: 19, on right: 17 18
Body (59)
    on left: 20, on right: 14 30 62 64 65 66
Block (60)
    on left: 21 22, on right: 20 22
Command (61)
    on left: 23 24 25 26 27 28 29 30 31, on right: 22
Local (62)
    on left: 32, on right: 19 23
ID (63)
    on left: 33, on right: 34 67
Attribution (64)
    on left: 34, on right: 24
Expression (65)
    on left: 35 36 37 38 39, on right: 34 36 37 38 59 62 65 66 70 71
Literal (66)
    on left: 40 41 42 43, on right: 35
Boolean (67)
    on left: 44 45, on right: 41
OP (68)
    on left: 46 47 48 49 50 51 52 53 54 55 56, on right: 36
UnaryOP (69)
    on left: 57 58, on right: 37
Return (70)
    on left: 59, on right: 28
FlowControl (71)
    on left: 60 61, on right: 25
If (72)
    on left: 62, on right: 60
Else (73)
    on left: 63 64, on right: 62
While (74)
    on left: 65 66, on right: 61
Input (75)
    on left: 67, on right: 26
Output (76)
    on left: 68, on right: 27
Call (77)
    on left: 69, on right: 29 39
ExpList (78)
    on left: 70 71, on right: 68 69 70


State 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program    go to state 1
    DeclStart  go to state 2


State 1

    0 $accept: Program . $end
    4 DeclStart: Program . Type "ID"

    $end      shift, and go to state 3
    "INT"     shift, and go to state 4
    "FLOAT"   shift, and go to state 5
    "BOOL"    shift, and go to state 6
    "CHAR"    shift, and go to state 7
    "STRING"  shift, and go to state 8

    Type  go to state 9


State 2

    2 Program: DeclStart . Function
    3        | DeclStart . Global

    '['  shift, and go to state 10
    '('  shift, and go to state 11

    $default  reduce using rule 12 (Vector)

    Global    go to state 12
    Vector    go to state 13
    Function  go to state 14
    Header    go to state 15
    List      go to state 16


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    7 Type: "INT" .

    $default  reduce using rule 7 (Type)


State 5

    8 Type: "FLOAT" .

    $default  reduce using rule 8 (Type)


State 6

    9 Type: "BOOL" .

    $default  reduce using rule 9 (Type)


State 7

   10 Type: "CHAR" .

    $default  reduce using rule 10 (Type)


State 8

   11 Type: "STRING" .

    $default  reduce using rule 11 (Type)


State 9

    4 DeclStart: Program Type . "ID"

    "ID"  shift, and go to state 17


State 10

   13 Vector: '[' . "litInt" ']'

    "litInt"  shift, and go to state 18


State 11

   16 List: '(' . ParaList ')'

    "INT"     shift, and go to state 4
    "FLOAT"   shift, and go to state 5
    "BOOL"    shift, and go to state 6
    "CHAR"    shift, and go to state 7
    "STRING"  shift, and go to state 8

    Type       go to state 19
    ParaList   go to state 20
    Parameter  go to state 21
    Local      go to state 22


State 12

    3 Program: DeclStart Global .

    $default  reduce using rule 3 (Program)


State 13

    6 Global: Vector . SC

    ';'  shift, and go to state 23

    SC  go to state 24


State 14

    2 Program: DeclStart Function .

    $default  reduce using rule 2 (Program)


State 15

   14 Function: Header . Body Program

    '{'  shift, and go to state 25

    Body  go to state 26


State 16

   15 Header: List .

    $default  reduce using rule 15 (Header)


State 17

    4 DeclStart: Program Type "ID" .

    $default  reduce using rule 4 (DeclStart)


State 18

   13 Vector: '[' "litInt" . ']'

    ']'  shift, and go to state 27


State 19

   32 Local: Type . "ID"

    "ID"  shift, and go to state 28


State 20

   16 List: '(' ParaList . ')'

    ')'  shift, and go to state 29


State 21

   17 ParaList: Parameter . ',' ParaList
   18         | Parameter .

    ','  shift, and go to state 30

    $default  reduce using rule 18 (ParaList)


State 22

   19 Parameter: Local .

    $default  reduce using rule 19 (Parameter)


State 23

    5 SC: ';' .

    $default  reduce using rule 5 (SC)


State 24

    6 Global: Vector SC .

    $default  reduce using rule 6 (Global)


State 25

   20 Body: '{' . Block '}'

    $default  reduce using rule 21 (Block)

    Block  go to state 31


State 26

   14 Function: Header Body . Program

    $default  reduce using rule 1 (Program)

    Program    go to state 32
    DeclStart  go to state 2


State 27

   13 Vector: '[' "litInt" ']' .

    $default  reduce using rule 13 (Vector)


State 28

   32 Local: Type "ID" .

    $default  reduce using rule 32 (Local)


State 29

   16 List: '(' ParaList ')' .

    $default  reduce using rule 16 (List)


State 30

   17 ParaList: Parameter ',' . ParaList

    "INT"     shift, and go to state 4
    "FLOAT"   shift, and go to state 5
    "BOOL"    shift, and go to state 6
    "CHAR"    shift, and go to state 7
    "STRING"  shift, and go to state 8

    Type       go to state 19
    ParaList   go to state 33
    Parameter  go to state 21
    Local      go to state 22


State 31

   20 Body: '{' Block . '}'
   22 Block: Block . Command

    "INT"     shift, and go to state 4
    "FLOAT"   shift, and go to state 5
    "BOOL"    shift, and go to state 6
    "CHAR"    shift, and go to state 7
    "STRING"  shift, and go to state 8
    "IF"      shift, and go to state 34
    "WHILE"   shift, and go to state 35
    "DO"      shift, and go to state 36
    "INPUT"   shift, and go to state 37
    "OUTPUT"  shift, and go to state 38
    "RETURN"  shift, and go to state 39
    "ID"      shift, and go to state 40
    ';'       shift, and go to state 23
    '{'       shift, and go to state 25
    '}'       shift, and go to state 41

    SC           go to state 42
    Type         go to state 19
    Body         go to state 43
    Command      go to state 44
    Local        go to state 45
    ID           go to state 46
    Attribution  go to state 47
    Return       go to state 48
    FlowControl  go to state 49
    If           go to state 50
    While        go to state 51
    Input        go to state 52
    Output       go to state 53
    Call         go to state 54


State 32

    4 DeclStart: Program . Type "ID"
   14 Function: Header Body Program .

    "INT"     shift, and go to state 4
    "FLOAT"   shift, and go to state 5
    "BOOL"    shift, and go to state 6
    "CHAR"    shift, and go to state 7
    "STRING"  shift, and go to state 8

    "INT"     [reduce using rule 14 (Function)]
    "FLOAT"   [reduce using rule 14 (Function)]
    "BOOL"    [reduce using rule 14 (Function)]
    "CHAR"    [reduce using rule 14 (Function)]
    "STRING"  [reduce using rule 14 (Function)]
    $default  reduce using rule 14 (Function)

    Type  go to state 9


State 33

   17 ParaList: Parameter ',' ParaList .

    $default  reduce using rule 17 (ParaList)


State 34

   62 If: "IF" . '(' Expression ')' "THEN" Body Else

    '('  shift, and go to state 55


State 35

   65 While: "WHILE" . '(' Expression ')' "DO" Body

    '('  shift, and go to state 56


State 36

   66 While: "DO" . Body "WHILE" '(' Expression ')' SC

    '{'  shift, and go to state 25

    Body  go to state 57


State 37

   67 Input: "INPUT" . ID

    "ID"  shift, and go to state 58

    ID  go to state 59


State 38

   68 Output: "OUTPUT" . ExpList

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 68
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72
    ExpList     go to state 73


State 39

   59 Return: "RETURN" . Expression

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 74
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72


State 40

   33 ID: "ID" . Vector
   69 Call: "ID" . '(' ExpList ')'

    '['  shift, and go to state 10
    '('  shift, and go to state 75

    $default  reduce using rule 12 (Vector)

    Vector  go to state 76


State 41

   20 Body: '{' Block '}' .

    $default  reduce using rule 20 (Body)


State 42

   31 Command: SC .

    $default  reduce using rule 31 (Command)


State 43

   30 Command: Body .

    $default  reduce using rule 30 (Command)


State 44

   22 Block: Block Command .

    $default  reduce using rule 22 (Block)


State 45

   23 Command: Local . SC

    ';'  shift, and go to state 23

    SC  go to state 77


State 46

   34 Attribution: ID . '=' Expression

    '='  shift, and go to state 78


State 47

   24 Command: Attribution . SC

    ';'  shift, and go to state 23

    SC  go to state 79


State 48

   28 Command: Return . SC

    ';'  shift, and go to state 23

    SC  go to state 80


State 49

   25 Command: FlowControl . SC

    ';'  shift, and go to state 23

    SC  go to state 81


State 50

   60 FlowControl: If .

    $default  reduce using rule 60 (FlowControl)


State 51

   61 FlowControl: While .

    $default  reduce using rule 61 (FlowControl)


State 52

   26 Command: Input . SC

    ';'  shift, and go to state 23

    SC  go to state 82


State 53

   27 Command: Output . SC

    ';'  shift, and go to state 23

    SC  go to state 83


State 54

   29 Command: Call . SC

    ';'  shift, and go to state 23

    SC  go to state 84


State 55

   62 If: "IF" '(' . Expression ')' "THEN" Body Else

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 85
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72


State 56

   65 While: "WHILE" '(' . Expression ')' "DO" Body

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 86
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72


State 57

   66 While: "DO" Body . "WHILE" '(' Expression ')' SC

    "WHILE"  shift, and go to state 87


State 58

   33 ID: "ID" . Vector

    '['  shift, and go to state 10

    $default  reduce using rule 12 (Vector)

    Vector  go to state 76


State 59

   67 Input: "INPUT" ID .

    $default  reduce using rule 67 (Input)


State 60

   43 Literal: "litFloat" .

    $default  reduce using rule 43 (Literal)


State 61

   44 Boolean: "false" .

    $default  reduce using rule 44 (Boolean)


State 62

   45 Boolean: "true" .

    $default  reduce using rule 45 (Boolean)


State 63

   40 Literal: "ID" . Vector
   69 Call: "ID" . '(' ExpList ')'

    '['  shift, and go to state 10
    '('  shift, and go to state 75

    $default  reduce using rule 12 (Vector)

    Vector  go to state 88


State 64

   38 Expression: '(' . Expression ')'

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 89
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72


State 65

   42 Literal: "litInteger" .

    $default  reduce using rule 42 (Literal)


State 66

   57 UnaryOP: '-' .

    $default  reduce using rule 57 (UnaryOP)


State 67

   58 UnaryOP: '!' .

    $default  reduce using rule 58 (UnaryOP)


State 68

   36 Expression: Expression . OP Expression
   70 ExpList: Expression . ',' ExpList
   71        | Expression .

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "&&"  shift, and go to state 93
    "||"  shift, and go to state 94
    ','   shift, and go to state 95
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '>'   shift, and go to state 100
    '<'   shift, and go to state 101

    $default  reduce using rule 71 (ExpList)

    OP  go to state 102


State 69

   35 Expression: Literal .

    $default  reduce using rule 35 (Expression)


State 70

   41 Literal: Boolean .

    $default  reduce using rule 41 (Literal)


State 71

   37 Expression: UnaryOP . Expression

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 103
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72


State 72

   39 Expression: Call .

    $default  reduce using rule 39 (Expression)


State 73

   68 Output: "OUTPUT" ExpList .

    $default  reduce using rule 68 (Output)


State 74

   36 Expression: Expression . OP Expression
   59 Return: "RETURN" Expression .

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "&&"  shift, and go to state 93
    "||"  shift, and go to state 94
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '>'   shift, and go to state 100
    '<'   shift, and go to state 101

    $default  reduce using rule 59 (Return)

    OP  go to state 102


State 75

   69 Call: "ID" '(' . ExpList ')'

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 68
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72
    ExpList     go to state 104


State 76

   33 ID: "ID" Vector .

    $default  reduce using rule 33 (ID)


State 77

   23 Command: Local SC .

    $default  reduce using rule 23 (Command)


State 78

   34 Attribution: ID '=' . Expression

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 105
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72


State 79

   24 Command: Attribution SC .

    $default  reduce using rule 24 (Command)


State 80

   28 Command: Return SC .

    $default  reduce using rule 28 (Command)


State 81

   25 Command: FlowControl SC .

    $default  reduce using rule 25 (Command)


State 82

   26 Command: Input SC .

    $default  reduce using rule 26 (Command)


State 83

   27 Command: Output SC .

    $default  reduce using rule 27 (Command)


State 84

   29 Command: Call SC .

    $default  reduce using rule 29 (Command)


State 85

   36 Expression: Expression . OP Expression
   62 If: "IF" '(' Expression . ')' "THEN" Body Else

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "&&"  shift, and go to state 93
    "||"  shift, and go to state 94
    ')'   shift, and go to state 106
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '>'   shift, and go to state 100
    '<'   shift, and go to state 101

    OP  go to state 102


State 86

   36 Expression: Expression . OP Expression
   65 While: "WHILE" '(' Expression . ')' "DO" Body

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "&&"  shift, and go to state 93
    "||"  shift, and go to state 94
    ')'   shift, and go to state 107
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '>'   shift, and go to state 100
    '<'   shift, and go to state 101

    OP  go to state 102


State 87

   66 While: "DO" Body "WHILE" . '(' Expression ')' SC

    '('  shift, and go to state 108


State 88

   40 Literal: "ID" Vector .

    $default  reduce using rule 40 (Literal)


State 89

   36 Expression: Expression . OP Expression
   38           | '(' Expression . ')'

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "&&"  shift, and go to state 93
    "||"  shift, and go to state 94
    ')'   shift, and go to state 109
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '>'   shift, and go to state 100
    '<'   shift, and go to state 101

    OP  go to state 102


State 90

   54 OP: "<=" .

    $default  reduce using rule 54 (OP)


State 91

   53 OP: ">=" .

    $default  reduce using rule 53 (OP)


State 92

   52 OP: "==" .

    $default  reduce using rule 52 (OP)


State 93

   55 OP: "&&" .

    $default  reduce using rule 55 (OP)


State 94

   56 OP: "||" .

    $default  reduce using rule 56 (OP)


State 95

   70 ExpList: Expression ',' . ExpList

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 68
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72
    ExpList     go to state 110


State 96

   46 OP: '+' .

    $default  reduce using rule 46 (OP)


State 97

   47 OP: '-' .

    $default  reduce using rule 47 (OP)


State 98

   48 OP: '*' .

    $default  reduce using rule 48 (OP)


State 99

   49 OP: '/' .

    $default  reduce using rule 49 (OP)


State 100

   50 OP: '>' .

    $default  reduce using rule 50 (OP)


State 101

   51 OP: '<' .

    $default  reduce using rule 51 (OP)


State 102

   36 Expression: Expression OP . Expression

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 111
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72


State 103

   36 Expression: Expression . OP Expression
   37           | UnaryOP Expression .

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "&&"  shift, and go to state 93
    "||"  shift, and go to state 94
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '>'   shift, and go to state 100
    '<'   shift, and go to state 101

    "<="      [reduce using rule 37 (Expression)]
    ">="      [reduce using rule 37 (Expression)]
    "=="      [reduce using rule 37 (Expression)]
    "&&"      [reduce using rule 37 (Expression)]
    "||"      [reduce using rule 37 (Expression)]
    '+'       [reduce using rule 37 (Expression)]
    '-'       [reduce using rule 37 (Expression)]
    '*'       [reduce using rule 37 (Expression)]
    '/'       [reduce using rule 37 (Expression)]
    '>'       [reduce using rule 37 (Expression)]
    '<'       [reduce using rule 37 (Expression)]
    $default  reduce using rule 37 (Expression)

    OP  go to state 102


State 104

   69 Call: "ID" '(' ExpList . ')'

    ')'  shift, and go to state 112


State 105

   34 Attribution: ID '=' Expression .
   36 Expression: Expression . OP Expression

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "&&"  shift, and go to state 93
    "||"  shift, and go to state 94
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '>'   shift, and go to state 100
    '<'   shift, and go to state 101

    $default  reduce using rule 34 (Attribution)

    OP  go to state 102


State 106

   62 If: "IF" '(' Expression ')' . "THEN" Body Else

    "THEN"  shift, and go to state 113


State 107

   65 While: "WHILE" '(' Expression ')' . "DO" Body

    "DO"  shift, and go to state 114


State 108

   66 While: "DO" Body "WHILE" '(' . Expression ')' SC

    "litFloat"    shift, and go to state 60
    "false"       shift, and go to state 61
    "true"        shift, and go to state 62
    "ID"          shift, and go to state 63
    '('           shift, and go to state 64
    "litInteger"  shift, and go to state 65
    '-'           shift, and go to state 66
    '!'           shift, and go to state 67

    Expression  go to state 115
    Literal     go to state 69
    Boolean     go to state 70
    UnaryOP     go to state 71
    Call        go to state 72


State 109

   38 Expression: '(' Expression ')' .

    $default  reduce using rule 38 (Expression)


State 110

   70 ExpList: Expression ',' ExpList .

    $default  reduce using rule 70 (ExpList)


State 111

   36 Expression: Expression . OP Expression
   36           | Expression OP Expression .

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "&&"  shift, and go to state 93
    "||"  shift, and go to state 94
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '>'   shift, and go to state 100
    '<'   shift, and go to state 101

    "<="      [reduce using rule 36 (Expression)]
    ">="      [reduce using rule 36 (Expression)]
    "=="      [reduce using rule 36 (Expression)]
    "&&"      [reduce using rule 36 (Expression)]
    "||"      [reduce using rule 36 (Expression)]
    '+'       [reduce using rule 36 (Expression)]
    '-'       [reduce using rule 36 (Expression)]
    '*'       [reduce using rule 36 (Expression)]
    '/'       [reduce using rule 36 (Expression)]
    '>'       [reduce using rule 36 (Expression)]
    '<'       [reduce using rule 36 (Expression)]
    $default  reduce using rule 36 (Expression)

    OP  go to state 102


State 112

   69 Call: "ID" '(' ExpList ')' .

    $default  reduce using rule 69 (Call)


State 113

   62 If: "IF" '(' Expression ')' "THEN" . Body Else

    '{'  shift, and go to state 25

    Body  go to state 116


State 114

   65 While: "WHILE" '(' Expression ')' "DO" . Body

    '{'  shift, and go to state 25

    Body  go to state 117


State 115

   36 Expression: Expression . OP Expression
   66 While: "DO" Body "WHILE" '(' Expression . ')' SC

    "<="  shift, and go to state 90
    ">="  shift, and go to state 91
    "=="  shift, and go to state 92
    "&&"  shift, and go to state 93
    "||"  shift, and go to state 94
    ')'   shift, and go to state 118
    '+'   shift, and go to state 96
    '-'   shift, and go to state 97
    '*'   shift, and go to state 98
    '/'   shift, and go to state 99
    '>'   shift, and go to state 100
    '<'   shift, and go to state 101

    OP  go to state 102


State 116

   62 If: "IF" '(' Expression ')' "THEN" Body . Else

    "ELSE"  shift, and go to state 119

    $default  reduce using rule 63 (Else)

    Else  go to state 120


State 117

   65 While: "WHILE" '(' Expression ')' "DO" Body .

    $default  reduce using rule 65 (While)


State 118

   66 While: "DO" Body "WHILE" '(' Expression ')' . SC

    ';'  shift, and go to state 23

    SC  go to state 121


State 119

   64 Else: "ELSE" . Body

    '{'  shift, and go to state 25

    Body  go to state 122


State 120

   62 If: "IF" '(' Expression ')' "THEN" Body Else .

    $default  reduce using rule 62 (If)


State 121

   66 While: "DO" Body "WHILE" '(' Expression ')' SC .

    $default  reduce using rule 66 (While)


State 122

   64 Else: "ELSE" Body .

    $default  reduce using rule 64 (Else)
