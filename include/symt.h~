#ifndef _SYMTABLE_
#define _SYMTABLE_

typedef union{
	int	integer;
	float	floating;
	char	character;
	char*	string;
}VALUE;

typedef struct {
	int		token;
  	VALUE		description;
}TOKEN;

typedef struct {
	TOKEN*	token;
	int		line;
}DIC;

typedef struct{
	DIC**	data;
}TABLE;



//Hash table API
TABLE*	createHashTable();
int		destroyHashTable(TABLE* table);

DIC*	addHashElement(TABLE* table, TOKEN* token, int line);
int		retrieveHashLine(TABLE* table, TOKEN* token);

int		hash(TOKEN* token);

TOKEN* createToken(int token, char* description, int type);

TOKEN* createIntToken(int token, int description);

TOKEN* createFltToken(int token, float description);

TOKEN* createChrToken(int token, char description);

TOKEN* createStrToken(int token, char* description);

#endif
